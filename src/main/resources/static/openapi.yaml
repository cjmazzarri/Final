openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url
tags:
- name: Students
  description: Product Movement Microservice API endpoint
paths:
  /api/arriving:
    get:
      tags:
      - Products
      summary: Get all arriving products
      description: Returns a page of all the products that have arrived
      operationId: getArrivingProducts
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageProductResource'

  /api/exiting:
    get:
      tags:
        - Products
      summary: Get all exiting products
      description: Returns a page of all the products that have exited
      operationId: getArrivingProducts
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageProductResource'

  /api/products/{productId}:
    get:
      tags:
        - Students
      summary: Get a product by its Id.
      description: Returns a particular product given its Id.
      operationId: getStudentById
      parameters:
        - name: "productId"
          in: "path"
          description: "Id of the Product to return"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "Successful operation"
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductResource'
        "404":
          description: "Product not found with the given Id. Try another Id."

components:
  schemas:
    Pageable:
      type: object
      properties:
        offset:
          type: integer
          format: int64
        sort:
          $ref: '#/components/schemas/Sort'
        pageSize:
          type: integer
          format: int32
        pageNumber:
          type: integer
          format: int32
        paged:
          type: boolean
        unpaged:
          type: boolean
    Sort:
      type: object
      properties:
        unsorted:
          type: boolean
        sorted:
          type: boolean
        empty:
          type: boolean
    PageProductResource:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/ProductResource'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/Sort'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/Pageable'
        empty:
          type: boolean
    ProductResource:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 2
        name:
          type: string
          example: "Doritos Mega Queso"
        date:
          type: string
          example: "11-04-21"
        action:
          type: string
          example: "SALIDA"
